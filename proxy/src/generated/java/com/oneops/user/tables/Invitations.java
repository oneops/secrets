/*
 * This file is generated by jOOQ.
*/
package com.oneops.user.tables;


import com.oneops.user.Keys;
import com.oneops.user.Public;
import com.oneops.user.tables.records.InvitationsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invitations extends TableImpl<InvitationsRecord> {

    private static final long serialVersionUID = 1794765084;

    /**
     * The reference instance of <code>public.invitations</code>
     */
    public static final Invitations INVITATIONS = new Invitations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvitationsRecord> getRecordType() {
        return InvitationsRecord.class;
    }

    /**
     * The column <code>public.invitations.id</code>.
     */
    public final TableField<InvitationsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('invitations_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.invitations.email</code>.
     */
    public final TableField<InvitationsRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.invitations.token</code>.
     */
    public final TableField<InvitationsRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "");

    /**
     * The column <code>public.invitations.comment</code>.
     */
    public final TableField<InvitationsRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>public.invitations.created_at</code>.
     */
    public final TableField<InvitationsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.invitations.updated_at</code>.
     */
    public final TableField<InvitationsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>public.invitations</code> table reference
     */
    public Invitations() {
        this("invitations", null);
    }

    /**
     * Create an aliased <code>public.invitations</code> table reference
     */
    public Invitations(String alias) {
        this(alias, INVITATIONS);
    }

    private Invitations(String alias, Table<InvitationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Invitations(String alias, Table<InvitationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InvitationsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INVITATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvitationsRecord> getPrimaryKey() {
        return Keys.INVITATIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvitationsRecord>> getKeys() {
        return Arrays.<UniqueKey<InvitationsRecord>>asList(Keys.INVITATIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invitations as(String alias) {
        return new Invitations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Invitations rename(String name) {
        return new Invitations(name, null);
    }
}
