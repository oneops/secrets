/*
 * This file is generated by jOOQ.
*/
package com.oneops.user.tables;


import com.oneops.user.Public;
import com.oneops.user.tables.records.SchemaMigrationsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaMigrations extends TableImpl<SchemaMigrationsRecord> {

    private static final long serialVersionUID = 2001250329;

    /**
     * The reference instance of <code>public.schema_migrations</code>
     */
    public static final SchemaMigrations SCHEMA_MIGRATIONS = new SchemaMigrations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchemaMigrationsRecord> getRecordType() {
        return SchemaMigrationsRecord.class;
    }

    /**
     * The column <code>public.schema_migrations.version</code>.
     */
    public final TableField<SchemaMigrationsRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>public.schema_migrations</code> table reference
     */
    public SchemaMigrations() {
        this("schema_migrations", null);
    }

    /**
     * Create an aliased <code>public.schema_migrations</code> table reference
     */
    public SchemaMigrations(String alias) {
        this(alias, SCHEMA_MIGRATIONS);
    }

    private SchemaMigrations(String alias, Table<SchemaMigrationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchemaMigrations(String alias, Table<SchemaMigrationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaMigrations as(String alias) {
        return new SchemaMigrations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchemaMigrations rename(String name) {
        return new SchemaMigrations(name, null);
    }
}
