/*
 * This file is generated by jOOQ.
*/
package com.oneops.user.tables;


import com.oneops.user.Keys;
import com.oneops.user.Public;
import com.oneops.user.tables.records.CiProxiesTeamsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CiProxiesTeams extends TableImpl<CiProxiesTeamsRecord> {

    private static final long serialVersionUID = 1338482065;

    /**
     * The reference instance of <code>public.ci_proxies_teams</code>
     */
    public static final CiProxiesTeams CI_PROXIES_TEAMS = new CiProxiesTeams();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CiProxiesTeamsRecord> getRecordType() {
        return CiProxiesTeamsRecord.class;
    }

    /**
     * The column <code>public.ci_proxies_teams.id</code>.
     */
    public final TableField<CiProxiesTeamsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('ci_proxies_teams_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.ci_proxies_teams.ci_proxy_id</code>.
     */
    public final TableField<CiProxiesTeamsRecord, Integer> CI_PROXY_ID = createField("ci_proxy_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ci_proxies_teams.team_id</code>.
     */
    public final TableField<CiProxiesTeamsRecord, Integer> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.ci_proxies_teams</code> table reference
     */
    public CiProxiesTeams() {
        this("ci_proxies_teams", null);
    }

    /**
     * Create an aliased <code>public.ci_proxies_teams</code> table reference
     */
    public CiProxiesTeams(String alias) {
        this(alias, CI_PROXIES_TEAMS);
    }

    private CiProxiesTeams(String alias, Table<CiProxiesTeamsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CiProxiesTeams(String alias, Table<CiProxiesTeamsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CiProxiesTeamsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CI_PROXIES_TEAMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CiProxiesTeamsRecord> getPrimaryKey() {
        return Keys.CI_PROXIES_TEAMS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CiProxiesTeamsRecord>> getKeys() {
        return Arrays.<UniqueKey<CiProxiesTeamsRecord>>asList(Keys.CI_PROXIES_TEAMS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CiProxiesTeams as(String alias) {
        return new CiProxiesTeams(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CiProxiesTeams rename(String name) {
        return new CiProxiesTeams(name, null);
    }
}
