/*
 * This file is generated by jOOQ.
*/
package com.oneops.user.tables;


import com.oneops.user.Keys;
import com.oneops.user.Public;
import com.oneops.user.tables.records.UsersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users extends TableImpl<UsersRecord> {

    private static final long serialVersionUID = 1799636312;

    /**
     * The reference instance of <code>public.users</code>
     */
    public static final Users USERS = new Users();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsersRecord> getRecordType() {
        return UsersRecord.class;
    }

    /**
     * The column <code>public.users.id</code>.
     */
    public final TableField<UsersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('users_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.users.email</code>.
     */
    public final TableField<UsersRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.users.encrypted_password</code>.
     */
    public final TableField<UsersRecord, String> ENCRYPTED_PASSWORD = createField("encrypted_password", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.users.reset_password_token</code>.
     */
    public final TableField<UsersRecord, String> RESET_PASSWORD_TOKEN = createField("reset_password_token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.reset_password_sent_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> RESET_PASSWORD_SENT_AT = createField("reset_password_sent_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.remember_created_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> REMEMBER_CREATED_AT = createField("remember_created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.sign_in_count</code>.
     */
    public final TableField<UsersRecord, Integer> SIGN_IN_COUNT = createField("sign_in_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.users.current_sign_in_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> CURRENT_SIGN_IN_AT = createField("current_sign_in_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.last_sign_in_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> LAST_SIGN_IN_AT = createField("last_sign_in_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.current_sign_in_ip</code>.
     */
    public final TableField<UsersRecord, String> CURRENT_SIGN_IN_IP = createField("current_sign_in_ip", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.last_sign_in_ip</code>.
     */
    public final TableField<UsersRecord, String> LAST_SIGN_IN_IP = createField("last_sign_in_ip", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.confirmation_token</code>.
     */
    public final TableField<UsersRecord, String> CONFIRMATION_TOKEN = createField("confirmation_token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.confirmed_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> CONFIRMED_AT = createField("confirmed_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.confirmation_sent_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> CONFIRMATION_SENT_AT = createField("confirmation_sent_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.failed_attempts</code>.
     */
    public final TableField<UsersRecord, Integer> FAILED_ATTEMPTS = createField("failed_attempts", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.users.unlock_token</code>.
     */
    public final TableField<UsersRecord, String> UNLOCK_TOKEN = createField("unlock_token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.locked_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> LOCKED_AT = createField("locked_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.organization_id</code>.
     */
    public final TableField<UsersRecord, Integer> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.users.created_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.users.updated_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.users.show_wizard</code>.
     */
    public final TableField<UsersRecord, Boolean> SHOW_WIZARD = createField("show_wizard", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.users.password_salt</code>.
     */
    public final TableField<UsersRecord, String> PASSWORD_SALT = createField("password_salt", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.unconfirmed_email</code>.
     */
    public final TableField<UsersRecord, String> UNCONFIRMED_EMAIL = createField("unconfirmed_email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.eula_accepted_at</code>.
     */
    public final TableField<UsersRecord, Timestamp> EULA_ACCEPTED_AT = createField("eula_accepted_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.users.authentication_token</code>.
     */
    public final TableField<UsersRecord, String> AUTHENTICATION_TOKEN = createField("authentication_token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.users.name</code>.
     */
    public final TableField<UsersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.users.username</code>.
     */
    public final TableField<UsersRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

    /**
     * The column <code>public.users.session_token</code>.
     */
    public final TableField<UsersRecord, String> SESSION_TOKEN = createField("session_token", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * Create a <code>public.users</code> table reference
     */
    public Users() {
        this("users", null);
    }

    /**
     * Create an aliased <code>public.users</code> table reference
     */
    public Users(String alias) {
        this(alias, USERS);
    }

    private Users(String alias, Table<UsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Users(String alias, Table<UsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsersRecord> getPrimaryKey() {
        return Keys.USERS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsersRecord>> getKeys() {
        return Arrays.<UniqueKey<UsersRecord>>asList(Keys.USERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Users as(String alias) {
        return new Users(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Users rename(String name) {
        return new Users(name, null);
    }
}
