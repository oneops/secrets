/*
 * This file is generated by jOOQ.
*/
package com.oneops.user.tables;


import com.oneops.user.Keys;
import com.oneops.user.Public;
import com.oneops.user.tables.records.MiscDocsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MiscDocs extends TableImpl<MiscDocsRecord> {

    private static final long serialVersionUID = 377332887;

    /**
     * The reference instance of <code>public.misc_docs</code>
     */
    public static final MiscDocs MISC_DOCS = new MiscDocs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MiscDocsRecord> getRecordType() {
        return MiscDocsRecord.class;
    }

    /**
     * The column <code>public.misc_docs.id</code>.
     */
    public final TableField<MiscDocsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('misc_docs_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.misc_docs.name</code>.
     */
    public final TableField<MiscDocsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.misc_docs.document</code>.
     */
    public final TableField<MiscDocsRecord, String> DOCUMENT = createField("document", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.misc_docs.created_at</code>.
     */
    public final TableField<MiscDocsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.misc_docs.updated_at</code>.
     */
    public final TableField<MiscDocsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>public.misc_docs</code> table reference
     */
    public MiscDocs() {
        this("misc_docs", null);
    }

    /**
     * Create an aliased <code>public.misc_docs</code> table reference
     */
    public MiscDocs(String alias) {
        this(alias, MISC_DOCS);
    }

    private MiscDocs(String alias, Table<MiscDocsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MiscDocs(String alias, Table<MiscDocsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MiscDocsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MISC_DOCS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MiscDocsRecord> getPrimaryKey() {
        return Keys.MISC_DOCS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MiscDocsRecord>> getKeys() {
        return Arrays.<UniqueKey<MiscDocsRecord>>asList(Keys.MISC_DOCS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MiscDocs as(String alias) {
        return new MiscDocs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MiscDocs rename(String name) {
        return new MiscDocs(name, null);
    }
}
